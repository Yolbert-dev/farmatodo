---
import AuthProtected from "../features/auth/AuthProtected.astro";
import Layout from "../layouts/Layout.astro";
import CalcMerma from "./CalcMerma.astro";
// No necesitamos las funciones aquí en el frontmatter, las llamaremos desde el script del cliente.
---

<Layout title="Home">
<AuthProtected>


  <div class="p-4 sm:p-6 lg:p-8 bg-gray-50 min-h-screen sm:ml-8 md:ml-16 lg:ml-24 xl:ml-72">
    <h1 class="text-3xl font-bold text-gray-800 mb-8">Resumen General</h1>

    <!-- Fila de Tarjetas de Estadísticas (HTML sin cambios) -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
       <!-- Card 1: Usuarios -->
    <div class="bg-white p-6 rounded-xl shadow-lg flex items-center gap-6 transform hover:-translate-y-1 transition-transform duration-300">
      <div class="bg-blue-100 p-4 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
        </svg>
      </div>
      <div>
        <p class="text-gray-500 text-sm font-medium">Total de Usuarios</p>
        <span id="user-count" class="text-3xl font-bold text-gray-800">...</span>
      </div>
    </div>

    <!-- Card 2: Actividades sin Completar -->
    <div class="bg-white p-6 rounded-xl shadow-lg flex items-center gap-6 transform hover:-translate-y-1 transition-transform duration-300">
      <div class="bg-orange-100 p-4 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-orange-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div>
        <p class="text-gray-500 text-sm font-medium">Actividades Pendientes</p>
        <span id="pending-tasks-count" class="text-3xl font-bold text-gray-800">...</span>
      </div>
    </div>

    <!-- Card 3: Actividades Culminadas -->
    <div class="bg-white p-6 rounded-xl shadow-lg flex items-center gap-6 transform hover:-translate-y-1 transition-transform duration-300">
      <div class="bg-green-100 p-4 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div>
        <p class="text-gray-500 text-sm font-medium">Actividades Culminadas</p>
        <span id="completed-tasks-count" class="text-3xl font-bold text-gray-800">...</span>
      </div>
    </div>
    </div>

    <button id="openModal" class="bg-blue-600 hover:bg-blue-700 text-white font-semibold mb-5 px-4 py-2 rounded-lg transition duration-300">
  Abrir Calculadora de Merma
</button>
<CalcMerma> </CalcMerma>

    <!-- Fila de Gráficas (HTML sin cambios) -->
    <div class="grid grid-cols-1 xl:grid-cols-5 gap-6">
      <div class="xl:col-span-3 bg-white p-6 rounded-xl shadow-lg flex flex-col">
        <h3 class="text-lg font-semibold text-gray-700 mb-4">Progreso de Actividades (Últimos 7 Días)</h3>
        <div class="relative h-80 md:h-96">
          <canvas id="activityChart"></canvas>
        </div>
      </div>
      <div class="xl:col-span-2 bg-white p-6 rounded-xl shadow-lg flex flex-col">
        <h3 class="text-lg font-semibold text-gray-700 mb-4">Distribución de Tareas por Tipo</h3>
        <div class="relative h-80 md:h-96">
          <canvas id="taskTypeChart"></canvas>
        </div>
      </div>
    </div>
  </div>

  <script>
    //@ts-nocheck
    import ky from 'ky';
    import { renderActivityChart, renderTaskTypeChart } from '../utils/charts.js';
    import { BACK_ENDPOINT } from '../config/endpoints.js';

    document.addEventListener('DOMContentLoaded', async () => {
      // 1. Crear una instancia de 'ky' que envíe las credenciales (cookies)
      //    El navegador adjuntará la cookie HttpOnly automáticamente.
      const api = ky.create({
        prefixUrl: BACK_ENDPOINT,
        credentials: 'include' // <-- ¡Esta es la línea clave!
      });

      // 2. Actualizar las tarjetas usando la nueva instancia 'api'
      async function updateCounters() {
        try {
          const [usersData, pendingData, completedData] = await Promise.all([
            api.get('api/users/count').json(),
            api.get('api/task/count').json(),
            api.get('api/taskCompleted/count').json()
          ]);

          document.getElementById('user-count').textContent = usersData.count;
          document.getElementById('pending-tasks-count').textContent = pendingData.count;
          document.getElementById('completed-tasks-count').textContent = completedData.count;

        } catch (error) {
          console.error('Error al cargar los datos del dashboard:', error);
          if (error.response && (error.response.status === 401 || error.response.status === 403)) {
              console.error('Error de autenticación. La cookie podría ser inválida o haber expirado.');
              // Opcional: Redirigir al login
              // window.location.href = '/login';
          }
          document.getElementById('user-count').textContent = 'Error';
          document.getElementById('pending-tasks-count').textContent = 'Error';
          document.getElementById('completed-tasks-count').textContent = 'Error';
        }
      }

      // 3. Llamadas a gráficas y contadores
      await updateCounters();
      renderActivityChart(document.getElementById('activityChart').getContext('2d'), api);
      renderTaskTypeChart(document.getElementById('taskTypeChart').getContext('2d'), api);
    });
  </script>
</AuthProtected>
</Layout>

