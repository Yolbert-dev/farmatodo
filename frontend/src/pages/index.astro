---
import Layout from "../layouts/Layout.astro";
import Img_tienda from"../assets/img_tienda.jpg";
import etiquetas from"../assets/etiquetas.jpg";
import vestimenta from"../assets/vestimenta.jpg";
---

<!-- TODO: Tipo de letra inter -->
<!-- TODO: Cambiar la descripcion -->
<Layout title="Home">

<!-- ---

// const userCount = await fetch(`${BACK_ENDPOINT}/api/users/count`).json();
// const pendingTasks = await fetch(`${BACK_ENDPOINT}/api/tasks/pending/count`).json();
// const completedTasks = await fetch(`${BACK_ENDPOINT}/api/tasks/completed/count`).json();
--- -->



<!-- Incluimos la librería Chart.js para las gráficas -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="p-4 sm:p-6 lg:p-8 bg-gray-50 min-h-screen sm:ml-8 md:ml-16  lg:ml-24 xl:ml-72">
  
  <h1 class="text-3xl font-bold text-gray-800 mb-8">Resumen General</h1>

  <!-- Fila de Tarjetas de Estadísticas (Stats Cards) -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
    
    <!-- Card 1: Usuarios -->
    <div class="bg-white p-6 rounded-xl shadow-lg flex items-center gap-6 transform hover:-translate-y-1 transition-transform duration-300">
      <div class="bg-blue-100 p-4 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z" />
        </svg>
      </div>
      <div>
        <p class="text-gray-500 text-sm font-medium">Total de Usuarios</p>
        <span id="user-count" class="text-3xl font-bold text-gray-800">0</span>
      </div>
    </div>

    <!-- Card 2: Actividades sin Completar -->
    <div class="bg-white p-6 rounded-xl shadow-lg flex items-center gap-6 transform hover:-translate-y-1 transition-transform duration-300">
      <div class="bg-orange-100 p-4 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-orange-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div>
        <p class="text-gray-500 text-sm font-medium">Actividades Pendientes</p>
        <span id="pending-tasks-count" class="text-3xl font-bold text-gray-800">0</span>
      </div>
    </div>

    <!-- Card 3: Actividades Culminadas -->
    <div class="bg-white p-6 rounded-xl shadow-lg flex items-center gap-6 transform hover:-translate-y-1 transition-transform duration-300">
      <div class="bg-green-100 p-4 rounded-full">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
          <path stroke-linecap="round" stroke-linejoin="round" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
      </div>
      <div>
        <p class="text-gray-500 text-sm font-medium">Actividades Culminadas</p>
        <span id="completed-tasks-count" class="text-3xl font-bold text-gray-800">0</span>
      </div>
    </div>
  </div>

  <!-- Fila de Gráficas -->
  <div class="grid grid-cols-1 xl:grid-cols-5 gap-6">
    
    <!-- Gráfica de Líneas (más ancha) -->
    <div class="xl:col-span-3 bg-white p-6 rounded-xl shadow-lg flex flex-col">
      <h3 class="text-lg font-semibold text-gray-700 mb-4">Progreso de Actividades (Últimos 7 Días)</h3>
      <!-- ================== INICIO DE LA CORRECCIÓN ================== -->
      <!-- Este div wrapper le da una altura fija a la gráfica -->
      <div class="relative h-80 md:h-96">
        <canvas id="activityChart"></canvas>
      </div>
      <!-- =================== FIN DE LA CORRECCIÓN ==================== -->
    </div>

    <!-- Gráfica de Torta (más angosta) -->
    <div class="xl:col-span-2 bg-white p-6 rounded-xl shadow-lg flex flex-col">
      <h3 class="text-lg font-semibold text-gray-700 mb-4">Distribución de Tareas por Tipo</h3>
      <!-- ================== INICIO DE LA CORRECCIÓN ================== -->
      <!-- Este div wrapper también necesita una altura fija -->
      <div class="relative h-80 md:h-96">
        <canvas id="taskTypeChart"></canvas>
      </div>
      <!-- =================== FIN DE LA CORRECCIÓN ==================== -->
    </div>
  </div>

</div>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    
    // --- 1. ACTUALIZAR LOS CONTADORES DE LAS TARJETAS ---
    setTimeout(() => {
      document.getElementById('user-count').textContent = '48';
      document.getElementById('pending-tasks-count').textContent = '12';
      document.getElementById('completed-tasks-count').textContent = '134';
    }, 500);

    // --- 2. RENDERIZAR LAS GRÁFICAS ---
    
    // Gráfica de Líneas
    const activityCtx = document.getElementById('activityChart')?.getContext('2d');
    if (activityCtx) {
      const gradient = activityCtx.createLinearGradient(0, 0, 0, 300);
      gradient.addColorStop(0, 'rgba(59, 130, 246, 0.5)');
      gradient.addColorStop(1, 'rgba(59, 130, 246, 0)');

      new Chart(activityCtx, {
        type: 'line',
        data: {
          labels: ['Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado', 'Domingo'],
          datasets: [{
            label: 'Tareas Completadas',
            data: [12, 19, 15, 25, 22, 30, 26],
            backgroundColor: gradient,
            borderColor: '#3B82F6',
            borderWidth: 3,
            pointBackgroundColor: '#3B82F6',
            pointRadius: 5,
            tension: 0.4,
            fill: true,
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false, // <-- Esto es clave junto con el div wrapper
          scales: { y: { beginAtZero: true } },
          plugins: { legend: { display: false } }
        }
      });
    }

    // Gráfica de Torta (Pie Chart)
    const taskTypeCtx = document.getElementById('taskTypeChart')?.getContext('2d');
    if (taskTypeCtx) {
      new Chart(taskTypeCtx, {
        type: 'doughnut',
        data: {
          labels: ['Inventario', 'Ventas', 'Limpieza', 'Administrativo'],
          datasets: [{
            label: 'Distribución de Tareas',
            data: [300, 150, 100, 80],
            backgroundColor: ['#00539F', '#3B82F6', '#60A5FA', '#93C5FD'],
            borderColor: '#fff',
            borderWidth: 4,
            hoverOffset: 10
          }]
        },
        options: {
          responsive: true,
          maintainAspectRatio: false, // <-- Esto es clave junto con el div wrapper
          plugins: { legend: { position: 'bottom' } }
        }
      });
    }
  });
</script>
</Layout>