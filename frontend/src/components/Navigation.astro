---
// src/layouts/Layout.astro (VERSIÓN CORREGIDA)
// ---
import LogoImg from '../assets/logo.jpg';

export interface Props {
  title: string;
}
const { title } = Astro.props;


const menuItems = [
  { label: 'Inicio', href: '/' },
  { label: 'Actividades', href: '/listTasks' },
  { label: 'Usuarios', href: '/users' },
  { label: 'Incidencias', href: '/incidence' },
];
---

<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width" />
  <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
  <meta name="generator" content={Astro.generator} />
  <title>{title}</title>
</head>
<body class="bg-gray-100">

<header
  class="fixed top-0 left-0 right-0 h-12 bg-gray-900 flex justify-between items-center px-4 shadow-xl z-50 "
>
    <div class="flex items-center space-x-3">
    <button
      id="sidebarToggle"
      class="sm:hidden text-gray-200 p-2 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded"
      aria-label="Toggle menú"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none"
           viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round"
              d="M4 6h16M4 12h16M4 18h16" />
      </svg>
    </button>
    <div class="hidden sm:flex items-center space-x-3">
      <img src={LogoImg.src} alt="Logo" class="w-8 h-8 rounded-full" />
      <span class="text-lg font-bold text-gray-100">Farmatodo</span>
    </div>
  </div>
  <div class="relative">
    <button
      id="userMenuToggle"
       class="flex items-center text-gray-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded cursor-pointer border-b-2 border-transparent hover:border-white transition-all duration-300 ease-in-out"
     aria-label="Menú usuario"
    >
      <img src={LogoImg.src} alt="Avatar" class="w-8 h-8 rounded-full" />
      <span class="sm:inline-block ml-2 text-sm font-medium text-gray-200 cursor-pointer">Yolbert</span>
    </button>
    <div
      id="userDropdown"
      class="hidden absolute right-0 mt-2 w-44 bg-white text-gray-900 rounded-md shadow-lg overflow-hidden z-40"
    >
      <a href="/perfil" class="block px-4 py-2 hover:bg-gray-100">Mi Perfil</a>
      <a href="#" id="logout"  class="block px-4 py-2 hover:bg-gray-100">Cerrar Sesión</a>
    </div>
  </div>
</header>

<div id="overlay" class="fixed inset-0 bg-black bg-opacity-50 hidden z-30"></div>

<aside   
  id="sidebar"
  class="fixed top-12 left-0 h-[calc(100%-3rem)] w-64 bg-gray-900 text-gray-100 border-r border-gray-700 shadow-xl transform -translate-x-full sm:translate-x-0 transition-transform duration-300 ease-in-out z-40 flex flex-col pl-12  "
>
    <div class="flex items-center px-6 py-4 border-b border-gray-700 sm:hidden">
    <img src={LogoImg.src} alt="Logo" class="w-8 h-8 rounded-full mr-2" />
    <span class="text-lg font-bold text-gray-100">Farmatodo</span>
    <button
      id="closeSidebar"
      class="ml-auto text-gray-200 p-1 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 rounded"
      aria-label="Cerrar menú"
    >
      <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
        <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
      </svg>
    </button>
  </div>
  <nav class="px-4 py-6 flex-1 overflow-auto ">
    <ul class="space-y-4">
      {menuItems.map((item) => (
        <li>
          <a href={item.href} class="block px-3 py-2 rounded-lg border-b-2 border-transparent hover:border-white hover:bg-gray-800 hover:bg-opacity-80 transition-all duration-300 ease-in-out font-medium">
            {item.label}
          </a>
        </li>
      ))}
    </ul>
  </nav>
</aside>

<main class="transition-all duration-300 ease-in-out sm:pl-72 pt-13">
  <div class="p-4 sm:p-8">
    <slot />
  </div>
</main>


<script>
  import {BACK_ENDPOINT} from "../config/endpoints.js"
  import ky from "ky";
  import AuthModule from "../features/auth/auth.module"
  // Script sin cambios
  //@ts-nocheck
  const sidebar   = document.getElementById('sidebar');
  const overlay   = document.getElementById('overlay');
  const toggleBtn = document.getElementById('sidebarToggle');
  const closeBtn  = document.getElementById('closeSidebar');
  const userToggle   = document.getElementById('userMenuToggle');
  const userDropdown = document.getElementById('userDropdown');

  function openSidebar() {
    sidebar.classList.remove('-translate-x-full');
    overlay.classList.remove('hidden');
  }
  function closeSidebar() {
    sidebar.classList.add('-translate-x-full');
    overlay.classList.add('hidden');
  }
  function toggleSidebar() {
    sidebar.classList.contains('-translate-x-full') ? openSidebar() : closeSidebar();
  }
  
  if (toggleBtn) toggleBtn.addEventListener('click', toggleSidebar);
  if (closeBtn) closeBtn.addEventListener('click', closeSidebar);
  if (overlay) overlay.addEventListener('click', closeSidebar);

  if (userToggle) {
    userToggle.addEventListener('click', () => {
      userDropdown.classList.toggle('hidden');
    });
  }
  
  document.addEventListener('click', (event) => {
    if (
      userToggle &&
      !userToggle.contains(event.target as Node) &&
      userDropdown &&
      !userDropdown.contains(event.target as Node)
    ) {
      userDropdown.classList.add('hidden');
    }
  });

  document.addEventListener('DOMContentLoaded', () => {
  const logoutBtn = document.getElementById('logout');

  if (logoutBtn) {
    logoutBtn.addEventListener('click', async (e) => {
      e.preventDefault(); // Evita navegación por defecto

      try {
        await AuthModule.logoutUser();
        window.location.href = '/login'; // Redirige al login tras cerrar sesión
      } catch (error) {
        console.error('Error al cerrar sesión:', error);
        alert('No se pudo cerrar sesión. Intenta nuevamente.');
      }
    });
  }
});
</script>

</body>
</html>